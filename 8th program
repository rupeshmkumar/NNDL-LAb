import keras
from keras.datasets import boston_housing
(train_data, train_targets), (test_data, test_targets) =  boston_housing.load_data()
#Preprocessing of data

mean = train_data.mean(axis=0)
train_data -= mean
std = train_data.std(axis=0)
train_data /= std
test_data -= mean
test_data /= std
#Building our network

from keras import models
from keras import layers

def build_model():
    # we use a function to construct it.
    model = models.Sequential()
    model.add(layers.Dense(64, activation='relu', input_shape=(train_data.shape[1],)))
    model.add(layers.Dense(64, activation='relu'))
    model.add(layers.Dense(1))
    model.compile(optimizer='rmsprop', loss='mse', metrics=['mae'])
    return model
import numpy as np   
    # Build the Keras model (already compiled)
model = build_model()
    # Train the model (in silent mode, verbose=0)
model.fit(train_data,  train_targets, epochs=num_epochs, batch_size=1, verbose=0)
    # Evaluate the model on the validation data
val_mse, val_mae = model.evaluate(val_data, val_targets, verbose=0)
print(val_mae)
